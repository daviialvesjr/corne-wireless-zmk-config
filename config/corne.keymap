/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <16 15>;
        };

        left_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <15 14>;
        };

        left_control_shift {
            bindings = <&kp LS(LEFT_CONTROL)>;
            key-positions = <16 15 14>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <2 3 4>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <7 8 9>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        right_control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <19 20>;
        };

        right_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
        };

        right_shift_control {
            bindings = <&kp LS(LEFT_CONTROL)>;
            key-positions = <19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&none           &kp Q  &kp W  &kp E      &kp R          &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P           &kp INSERT
&none           &kp A  &kp S  &kp D      &kp F          &kp G        &kp H      &kp J  &kp K      &kp L    &kp APOSTROPHE  &kp LEFT_GUI
&bt BT_CLR_ALL  &kp Z  &kp X  &kp C      &kp V          &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH        &bt BT_CLR_ALL
                              &lt 4 DEL  &kp BACKSPACE  &kp SPACE    &lt 1 TAB  &mo 2  &mo 3
            >;
        };

        numbers_layer {
            display-name = "Numbers";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp NON_US_BACKSLASH  &kp N7        &kp N8        &kp N9        &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp GRAVE             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp SEMICOLON         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans
                        &trans  &trans  &trans    &trans                &trans        &trans
            >;
        };

        symbols_layer {
            display-name = "Symbols";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PIPE   &kp AMPS         &kp ASTERISK  &kp LPAR   &kp RPAR   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp TILDE  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp UNDER  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp COLON  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp PLUS   &trans
                        &trans  &trans  &trans    &trans     &trans           &trans
            >;
        };

        movements_layer {
            display-name = "Movements";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &none     &kp PAGE_DOWN  &kp PAGE_UP   &none      &none  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &none     &kp END        &kp HOME      &none      &none  &trans
                        &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        functions_layer {
            display-name = "Functions";
            bindings = <
&none  &kp F12  &kp F9  &kp F8  &kp F7  &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp F11  &kp F6  &kp F5  &kp F4  &none     &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp F10  &kp F3  &kp F2  &kp F1  &none     &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
